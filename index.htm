<!doctype html5>
<html>
    <head>
        <title>locationtest</title>
        <meta charset="UTF-8"> 
        <link rel="stylesheet" type="text/css" href="style/style.css">
        <link rel="stylesheet" type="text/css" href="style/bbui.css">

		<script type="text/javascript" src="local:///chrome/webworks.js"></script>
        <script src="js/bbui.js" type="text/javascript"></script>
        <script src="js/sensorlog.js" type="text/javascript"></script>

        <script src="js/jquery.js" type="text/javascript"></script>
        <script src="js/underscore_1.4.3.js" type="text/javascript"></script>
        <script src="js/backbone_0.9.9.js" type="text/javascript"></script>

		<script type="text/javascript">
            document.addEventListener('webworksready', 
                function(e) 
                {
                    bb.init({
                        actionBarDark: true,
                        controlsDark: true,
                        listsDark: true,
                        ondomready: function() {
                            App.init();
                        },
                        onscreenready : function(element, id, params) {
                            App.screens.prev = App.screens.cur;
                            App.screens.cur = id;

                            if(id == App.screens.settings) {
                                SensorLog.stop();
                                App.load_settings(element);
                            }

                            if(App.screens.prev == App.screens.settings) {
                                App.save_settings();
                            }
                        }
                    });
                    console.log(blackberry);
                    bb.pushScreen('screen_main.htm', 'main');
                }, 
                false);

            window.App = {
                // Keep track of which screens we came from
                screens: {
                    settings: 'settings',
                    prev: '',
                    cur: ''
                },
                dom: {},
                data: {
                    timer: undefined
                },

                init: function() {  
                    var that = this;
                    SensorLog.init();  

                    this.dom.$output = jQuery('#output');
                    this.dom.$titlebar = jQuery('#titlebar')[0];

                    this.show_data(SensorLog.latest_data());
                    
                    document.addEventListener('SensorLog:new_data', function(e) {
                        that.show_data(e.data);
                    });
                },

                toggle_logging: function() {
                    SensorLog.toggle();

                    if (SensorLog.data.timer === undefined) {
                        this.dom.$titlebar.setActionCaption("Start");

                    } else {
                        this.dom.$titlebar.setActionCaption("Stop");
                    }
                },

                show_data: function(data) {
                    this.dom.$output.html(data);
                },

                ////////// Helper methods
                show_settings: function(){
                    bb.pushScreen('screen_settings.htm', this.screens.settings);
                },

                load_settings: function(screen) {
                    $(screen).find('#settings_delay').val(SensorLog.data.delay);
                },

                save_settings: function(){
                    SensorLog.data.delay = Number($('#settings_delay').val());
                },
                clear_data: function() {
                    SensorLog.clear_data();
                },

                dump_data: function() {
                    alert(SensorLog.data_as_string());
                },

            }
		</script>
    </head>
    <body></body>
</html>
